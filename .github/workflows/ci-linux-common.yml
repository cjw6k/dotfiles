name: CI - Common
on:
  workflow_call:
    inputs:
      distro:
        required: true
        type: string

      tag:
        required: true
        type: string

      suffix:
        required: false
        type: string
        default: ''

      dotfiles_devtools:
        required: false
        type: boolean
        default: true

      dotfiles_devtools_c:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_docker:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_extra:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_go:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_haskell:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_js:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_k8s:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_lua:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_php:
        required: false
        type: boolean
        default: false

      dotfiles_devtools_ruby:
        required: false
        type: boolean
        default: false

jobs:
  linux:
    runs-on: ubuntu-latest
    name: Install and Test on Linux
    # must match env.DOTFILES_TAG in the build-*.yml workflows
    container: ${{ format('ghcr.io/{0}:ci-{1}-{2}{3}', github.repository, inputs.distro, inputs.tag, inputs.suffix) }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: detect distro-and-version-safe command to init dotfiles
        id: init-dotfiles-command
        run: |
          echo command="$(.github/linux/init-dotfiles-command.sh ${{ inputs.distro }} ${{ inputs.tag }})" \
            >> "$GITHUB_OUTPUT"

      - name: init dotfiles
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
        run: |
          sudo \
            DOTFILES_DEVTOOLS=${{ inputs.dotfiles_devtools }} \
            DOTFILES_DEVTOOLS_C=${{ inputs.dotfiles_devtools_c }} \
            DOTFILES_DEVTOOLS_DOCKER=${{ inputs.dotfiles_devtools_docker }} \
            DOTFILES_DEVTOOLS_EXTRA=${{ inputs.dotfiles_devtools_extra }} \
            DOTFILES_DEVTOOLS_GO=${{ inputs.dotfiles_devtools_go }} \
            DOTFILES_DEVTOOLS_HASKELL=${{ inputs.dotfiles_devtools_haskell }} \
            DOTFILES_DEVTOOLS_JS=${{ inputs.dotfiles_devtools_js }} \
            DOTFILES_DEVTOOLS_K8S=${{ inputs.dotfiles_devtools_k8s }} \
            DOTFILES_DEVTOOLS_LUA=${{ inputs.dotfiles_devtools_lua }} \
            DOTFILES_DEVTOOLS_PHP=${{ inputs.dotfiles_devtools_php }} \
            DOTFILES_DEVTOOLS_RUBY=${{ inputs.dotfiles_devtools_ruby }} \
            -iu ci ${{ steps.init-dotfiles-command.outputs.command}} --branch "$BRANCH"

      - name: verify utilities are present
        run: .github/linux/confirm-installed-utils.sh "${{ inputs.distro }}" "${{ inputs.tag }}"

      - name: verify ci user has fish-shell
        run: |
          test "$(tee </etc/passwd | grep ^ci: | grep -o '[^:]*$')" = "$(which fish)"

      - name: run tests
        run: sudo -iu ci fishtape /home/ci/.config/dotfiles/tests.fish
