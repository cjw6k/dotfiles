name: CI - Gentoo
run-name: CI / Linux / Gentoo on ${{ github.head_ref || github.ref_name }}
on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-gentoo
  cancel-in-progress: true

jobs:
  linux-gentoo:
    runs-on: ubuntu-latest
    name: Install and Test on Linux (gentoo)
    services:
      portage:
        image: gentoo/portage:latest
        volumes:
          - portage:/var/db/repos/gentoo

    container:
      image: gentoo/stage3:latest
      options: --privileged --cap-add=SYS_PTRACE
      volumes:
        - portage:/var/db/repos/gentoo

    steps:
      - name: identify instruction set architecture
        id: arch
        run: |
          echo arch="$(lscpu | grep -P '^Architecture:' | sed 's/Architecture:\s\+//' | sed 's/x86_64/amd64/')" \
            >> "$GITHUB_OUTPUT"

      - name: identify microarchitecture
        id: march
        run: |
          echo march="$(gcc -march=native -E -v - </dev/null 2>&1 | grep cc1 | grep -oP '(?<=-march=)[^\s]+')" \
            >> "$GITHUB_OUTPUT"

      - name: restore binpkgs cache
        id: cache
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-binpkgs-${{ steps.arch.outputs.arch }}-${{ steps.march.outputs.march }}

        with:
          path: /var/cache/binpkgs
          key: ${{ env.cache-name }}-latest
          restore-keys:
            ${{ env.cache-name }}-

      - name: build architecture optimized binaries
        run: |
          sed -i 's/COMMON_FLAGS="-O2/COMMON_FLAGS="-march=native -O2/' /etc/portage/make.conf

      - name: enable buildpkg feature
        run: |
          echo 'FEATURES="buildpkg"' >> /etc/portage/make.conf
          # shellcheck disable=SC2016
          echo 'EMERGE_DEFAULT_OPTS="${EMERGE_DEFAULT_OPTS} --usepkg"' >> /etc/portage/make.conf
          tee </etc/portage/make.conf

      - name: note initial binpkgs info
        id: initial-binpkgs
        run: |
          echo sha1="$(sha1sum /var/cache/binpkgs/Packages | cut -d' ' -f1)" \
            >> "$GITHUB_OUTPUT"

      - name: install pre-requisites
        run: |
          # rust-bin is here to speed up compilation time in CI, it's not strictly a pre-req
          emerge dev-lang/rust-bin app-admin/sudo

      - name: checkout
        uses: actions/checkout@v4

      - name: install chezmoi
        run: sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin

      - name: add ci user
        run: |
          groupadd -r ci
          useradd -r ci -g ci -m
          [ ! -d /etc/sudoers.d ] && mkdir /etc/sudoers.d
          echo 'ci ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci

      - name: init dotfiles
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
        run: sudo DOTFILES_DEVTOOLS=true -iu ci chezmoi init --apply cjw6k --branch "$BRANCH"

      - name: verify utilities are present
        run: .github/linux/confirm-installed-utils.sh gentoo latest

      - name: verify ci user has fish-shell
        run: |
          test "$(tee </etc/passwd | grep ^ci: | grep -oP '[^:]+$')" = "$(readlink -f $(which fish))"

      - name: run tests
        run: sudo -iu ci fishtape /home/ci/.config/dotfiles/tests.fish

      - name: note final binpkgs info
        if: ${{ always() }}
        id: final-binpkgs
        run: |
          echo sha1="$(sha1sum /var/cache/binpkgs/Packages | cut -d' ' -f1)" \
            >> "$GITHUB_OUTPUT"

      - name: save binpkgs cache
        if: ${{ always() && (steps.initial-binpkgs.outputs.sha1 != steps.final-binpkgs.outputs.sha1) }}
        uses: actions/cache/save@v4
        env:
          cache-name: cache-binpkgs-${{ steps.arch.outputs.arch }}-${{ steps.march.outputs.march }}

        with:
          path: /var/cache/binpkgs
          key: ${{ env.cache-name }}-${{ steps.final-binpkgs.outputs.sha1 }}
