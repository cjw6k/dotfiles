#!/usr/bin/env sh

# ~/.config/dotfiles/utils.json hash:
# {{ include "private_dot_config/dotfiles/utils.json" | sha256sum }}

read -r -d '' script << 'JQ'
.[]
  | select(.devtools == true)
  | .install.linux.alpine."{{ trimPrefix "Alpine Linux " .chezmoi.osRelease.prettyName | trimPrefix "v" | regexFind "\\d+\\.\\d+|\\w+" }}"
    // .install.linux.alpine.common
    // .install.linux.common
    // .install.common
    // .name
  | select(. as $in | ["#builtin", "#custom", "#na", "#pip"] | index($in) | not)
JQ

packages=$(jq -r "$script" ~/.config/dotfiles/utils.json)
if test ! -z "$packages"; then
  sudo apk add $packages
fi

read -r -d '' pipScript << 'JQ'
.[]
  | select(.devtools == true)
  | select(
    (
      .install.linux.alpine."{{ trimPrefix "Alpine Linux " .chezmoi.osRelease.prettyName | trimPrefix "v" | regexFind "\\d+\\.\\d+|\\w+" }}"
      // .install.linux.alpine.common
      // .install.linux.common
      // .install.common
    ) == "#pip"
  )
  | .name
JQ

{{ $version := trimPrefix "Alpine Linux " .chezmoi.osRelease.prettyName | trimPrefix "v" | regexFind "\\d+\\.\\d+|\\w+" -}}
packages=$(jq -r "$pipScript" ~/.config/dotfiles/utils.json)
if test ! -z "$packages"; then
{{- if eq $version "3.19" }}
  pip install $packages --break-system-packages
{{- else }}
  pip install $packages
{{- end }}
fi
